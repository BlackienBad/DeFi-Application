{
  "contractName": "TokenLP1",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "faucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Blackie/DeFi-Application/src/Contracts/TokenLP1.sol\":\"TokenLP1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Blackie/DeFi-Application/src/Contracts/TokenLP1.sol\":{\"keccak256\":\"0xfe1eded416d5325c58f2720a61c38f05e65e288687a206ca330dfdf77ef8ebd9\",\"urls\":[\"bzz-raw://b2512b7fcab15eed161823b911d114ced120b98cf30089ec2427f66845f16c55\",\"dweb:/ipfs/QmV84rNYXoYz9nzRECLevouqQb24b2oLCy32xQ12LLzb2j\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f456c6f6e446f67650000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454c4400000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200023d565b508060049080519060200190620000af9291906200023d565b505050620000cd30683635c9adc5dea00000620000d360201b60201c565b62000499565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000146576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013d9062000325565b60405180910390fd5b6200015a600083836200023860201b60201c565b80600260008282546200016e919062000375565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001c5919062000375565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022c919062000347565b60405180910390a35050565b505050565b8280546200024b90620003dc565b90600052602060002090601f0160209004810192826200026f5760008555620002bb565b82601f106200028a57805160ff1916838001178555620002bb565b82800160010185558215620002bb579182015b82811115620002ba5782518255916020019190600101906200029d565b5b509050620002ca9190620002ce565b5090565b5b80821115620002e9576000816000905550600101620002cf565b5090565b6000620002fc601f8362000364565b9150620003098262000470565b602082019050919050565b6200031f81620003d2565b82525050565b600060208201905081810360008301526200034081620002ed565b9050919050565b60006020820190506200035e600083018462000314565b92915050565b600082825260208201905092915050565b60006200038282620003d2565b91506200038f83620003d2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003c757620003c662000412565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620003f557607f821691505b602082108114156200040c576200040b62000441565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61151a80620004a96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a35780637b56c2b2146101d357806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce9190610f6f565b60405180910390f35b6100f160048036038101906100ec9190610d5c565b61032f565b6040516100fe9190610f54565b60405180910390f35b61010f61034d565b60405161011c9190611071565b60405180910390f35b61013f600480360381019061013a9190610d0d565b610357565b60405161014c9190610f54565b60405180910390f35b61015d610458565b60405161016a919061108c565b60405180910390f35b61018d60048036038101906101889190610d5c565b610461565b60405161019a9190610f54565b60405180910390f35b6101bd60048036038101906101b89190610ca8565b61050d565b6040516101ca9190611071565b60405180910390f35b6101ed60048036038101906101e89190610d5c565b610555565b005b6101f76105e7565b6040516102049190610f6f565b60405180910390f35b61022760048036038101906102229190610d5c565b610679565b6040516102349190610f54565b60405180910390f35b61025760048036038101906102529190610d5c565b61076d565b6040516102649190610f54565b60405180910390f35b61028760048036038101906102829190610cd1565b61078b565b6040516102949190611071565b60405180910390f35b6060600380546102ac906111d5565b80601f01602080910402602001604051908101604052809291908181526020018280546102d8906111d5565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c610812565b848461081a565b6001905092915050565b6000600254905090565b60006103648484846109e5565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103af610812565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610ff1565b60405180910390fd5b61044c8561043b610812565b85846104479190611119565b61081a565b60019150509392505050565b60006012905090565b600061050361046e610812565b84846001600061047c610812565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104fe91906110c3565b61081a565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610590929190610f2b565b602060405180830381600087803b1580156105aa57600080fd5b505af11580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190610d98565b505050565b6060600480546105f6906111d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610622906111d5565b801561066f5780601f106106445761010080835404028352916020019161066f565b820191906000526020600020905b81548152906001019060200180831161065257829003601f168201915b5050505050905090565b60008060016000610688610812565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c90611051565b60405180910390fd5b610762610750610812565b85858461075d9190611119565b61081a565b600191505092915050565b600061078161077a610812565b84846109e5565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088190611031565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f190610fb1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109d89190611071565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c90611011565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc90610f91565b60405180910390fd5b610ad0838383610c64565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4d90610fd1565b60405180910390fd5b8181610b629190611119565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bf291906110c3565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c569190611071565b60405180910390a350505050565b505050565b600081359050610c788161149f565b92915050565b600081519050610c8d816114b6565b92915050565b600081359050610ca2816114cd565b92915050565b600060208284031215610cba57600080fd5b6000610cc884828501610c69565b91505092915050565b60008060408385031215610ce457600080fd5b6000610cf285828601610c69565b9250506020610d0385828601610c69565b9150509250929050565b600080600060608486031215610d2257600080fd5b6000610d3086828701610c69565b9350506020610d4186828701610c69565b9250506040610d5286828701610c93565b9150509250925092565b60008060408385031215610d6f57600080fd5b6000610d7d85828601610c69565b9250506020610d8e85828601610c93565b9150509250929050565b600060208284031215610daa57600080fd5b6000610db884828501610c7e565b91505092915050565b610dca8161114d565b82525050565b610dd98161115f565b82525050565b6000610dea826110a7565b610df481856110b2565b9350610e048185602086016111a2565b610e0d81611265565b840191505092915050565b6000610e256023836110b2565b9150610e3082611276565b604082019050919050565b6000610e486022836110b2565b9150610e53826112c5565b604082019050919050565b6000610e6b6026836110b2565b9150610e7682611314565b604082019050919050565b6000610e8e6028836110b2565b9150610e9982611363565b604082019050919050565b6000610eb16025836110b2565b9150610ebc826113b2565b604082019050919050565b6000610ed46024836110b2565b9150610edf82611401565b604082019050919050565b6000610ef76025836110b2565b9150610f0282611450565b604082019050919050565b610f168161118b565b82525050565b610f2581611195565b82525050565b6000604082019050610f406000830185610dc1565b610f4d6020830184610f0d565b9392505050565b6000602082019050610f696000830184610dd0565b92915050565b60006020820190508181036000830152610f898184610ddf565b905092915050565b60006020820190508181036000830152610faa81610e18565b9050919050565b60006020820190508181036000830152610fca81610e3b565b9050919050565b60006020820190508181036000830152610fea81610e5e565b9050919050565b6000602082019050818103600083015261100a81610e81565b9050919050565b6000602082019050818103600083015261102a81610ea4565b9050919050565b6000602082019050818103600083015261104a81610ec7565b9050919050565b6000602082019050818103600083015261106a81610eea565b9050919050565b60006020820190506110866000830184610f0d565b92915050565b60006020820190506110a16000830184610f1c565b92915050565b600081519050919050565b600082825260208201905092915050565b60006110ce8261118b565b91506110d98361118b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561110e5761110d611207565b5b828201905092915050565b60006111248261118b565b915061112f8361118b565b92508282101561114257611141611207565b5b828203905092915050565b60006111588261116b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156111c05780820151818401526020810190506111a5565b838111156111cf576000848401525b50505050565b600060028204905060018216806111ed57607f821691505b6020821081141561120157611200611236565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6114a88161114d565b81146114b357600080fd5b50565b6114bf8161115f565b81146114ca57600080fd5b50565b6114d68161118b565b81146114e157600080fd5b5056fea264697066735822122073c1dfa4269978e579cb78b4beab6830e05649ab785c602c59be51053bbfadb964736f6c63430008030033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "130:250:6:-:0;;;163:103;;;;;;;;;;1842:114:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:5;1909;:13;;;;;;;;;;;;:::i;:::-;;1942:7;1932;:17;;;;;;;;;;;;:::i;:::-;;1842:114;;214:44:6::1;228:4;235:22;214:5;;;:44;;:::i;:::-;130:250:::0;;7940:330:8;8042:1;8023:21;;:7;:21;;;;8015:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8091:49;8120:1;8124:7;8133:6;8091:20;;;:49;;:::i;:::-;8167:6;8151:12;;:22;;;;;;;:::i;:::-;;;;;;;;8205:6;8183:9;:18;8193:7;8183:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8247:7;8226:37;;8243:1;8226:37;;;8256:6;8226:37;;;;;;:::i;:::-;;;;;;;;7940:330;;:::o;10423:92::-;;;;:::o;130:250:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:366:11:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:118::-;466:24;484:5;466:24;:::i;:::-;461:3;454:37;444:53;;:::o;503:419::-;;707:2;696:9;692:18;684:26;;756:9;750:4;746:20;742:1;731:9;727:17;720:47;784:131;910:4;784:131;:::i;:::-;776:139;;674:248;;;:::o;928:222::-;;1059:2;1048:9;1044:18;1036:26;;1072:71;1140:1;1129:9;1125:17;1116:6;1072:71;:::i;:::-;1026:124;;;;:::o;1156:169::-;;1274:6;1269:3;1262:19;1314:4;1309:3;1305:14;1290:29;;1252:73;;;;:::o;1331:305::-;;1390:20;1408:1;1390:20;:::i;:::-;1385:25;;1424:20;1442:1;1424:20;:::i;:::-;1419:25;;1578:1;1510:66;1506:74;1503:1;1500:81;1497:2;;;1584:18;;:::i;:::-;1497:2;1628:1;1625;1621:9;1614:16;;1375:261;;;;:::o;1642:77::-;;1708:5;1697:16;;1687:32;;;:::o;1725:320::-;;1806:1;1800:4;1796:12;1786:22;;1853:1;1847:4;1843:12;1874:18;1864:2;;1930:4;1922:6;1918:17;1908:27;;1864:2;1992;1984:6;1981:14;1961:18;1958:38;1955:2;;;2011:18;;:::i;:::-;1955:2;1776:269;;;;:::o;2051:180::-;2099:77;2096:1;2089:88;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2237:180;2285:77;2282:1;2275:88;2382:4;2379:1;2372:15;2406:4;2403:1;2396:15;2423:181;2563:33;2559:1;2551:6;2547:14;2540:57;2529:75;:::o;130:250:6:-;;;;;;;",
  "deployedSourceMap": "130:250:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3082:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4724:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2940:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5533:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3246:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;278:99:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2223:93:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6232:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3574:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3804:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2021:89;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;4199:12;:10;:12::i;:::-;4213:7;4222:6;4190:8;:39::i;:::-;4246:4;4239:11;;4091:166;;;;:::o;3082:106::-;3143:7;3169:12;;3162:19;;3082:106;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;4893:24;4920:11;:19;4932:6;4920:19;;;;;;;;;;;;;;;:33;4940:12;:10;:12::i;:::-;4920:33;;;;;;;;;;;;;;;;4893:60;;4991:6;4971:16;:26;;4963:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5052:57;5061:6;5069:12;:10;:12::i;:::-;5102:6;5083:16;:25;;;;:::i;:::-;5052:8;:57::i;:::-;5127:4;5120:11;;;4724:414;;;;;:::o;2940:82::-;2989:5;3013:2;3006:9;;2940:82;:::o;5533:212::-;5621:4;5637:80;5646:12;:10;:12::i;:::-;5660:7;5706:10;5669:11;:25;5681:12;:10;:12::i;:::-;5669:25;;;;;;;;;;;;;;;:34;5695:7;5669:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5637:8;:80::i;:::-;5734:4;5727:11;;5533:212;;;;:::o;3246:125::-;3320:7;3346:9;:18;3356:7;3346:18;;;;;;;;;;;;;;;;3339:25;;3246:125;;;:::o;278:99:6:-;340:4;:13;;;354:6;361:7;340:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;278:99;;:::o;2223:93:8:-;2270:13;2302:7;2295:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:93;:::o;6232:371::-;6325:4;6341:24;6368:11;:25;6380:12;:10;:12::i;:::-;6368:25;;;;;;;;;;;;;;;:34;6394:7;6368:34;;;;;;;;;;;;;;;;6341:61;;6440:15;6420:16;:35;;6412:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6507:67;6516:12;:10;:12::i;:::-;6530:7;6558:15;6539:16;:34;;;;:::i;:::-;6507:8;:67::i;:::-;6592:4;6585:11;;;6232:371;;;;:::o;3574:172::-;3660:4;3676:42;3686:12;:10;:12::i;:::-;3700:9;3711:6;3676:9;:42::i;:::-;3735:4;3728:11;;3574:172;;;;:::o;3804:149::-;3893:7;3919:11;:18;3931:5;3919:18;;;;;;;;;;;;;;;:27;3938:7;3919:27;;;;;;;;;;;;;;;;3912:34;;3804:149;;;;:::o;586:96:10:-;639:7;665:10;658:17;;586:96;:::o;9496:340:8:-;9614:1;9597:19;;:5;:19;;;;9589:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9694:1;9675:21;;:7;:21;;;;9667:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9776:6;9746:11;:18;9758:5;9746:18;;;;;;;;;;;;;;;:27;9765:7;9746:27;;;;;;;;;;;;;;;:36;;;;9813:7;9797:32;;9806:5;9797:32;;;9822:6;9797:32;;;;;;:::i;:::-;;;;;;;;9496:340;;;:::o;7077:592::-;7200:1;7182:20;;:6;:20;;;;7174:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7283:1;7262:23;;:9;:23;;;;7254:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7336:47;7357:6;7365:9;7376:6;7336:20;:47::i;:::-;7394:21;7418:9;:17;7428:6;7418:17;;;;;;;;;;;;;;;;7394:41;;7470:6;7453:13;:23;;7445:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7565:6;7549:13;:22;;;;:::i;:::-;7529:9;:17;7539:6;7529:17;;;;;;;;;;;;;;;:42;;;;7605:6;7581:9;:20;7591:9;7581:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7644:9;7627:35;;7636:6;7627:35;;;7655:6;7627:35;;;;;;:::i;:::-;;;;;;;;7077:592;;;;:::o;10423:92::-;;;;:::o;7:139:11:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:407::-;;;833:2;821:9;812:7;808:23;804:32;801:2;;;849:1;846;839:12;801:2;892:1;917:53;962:7;953:6;942:9;938:22;917:53;:::i;:::-;907:63;;863:117;1019:2;1045:53;1090:7;1081:6;1070:9;1066:22;1045:53;:::i;:::-;1035:63;;990:118;791:324;;;;;:::o;1121:552::-;;;;1263:2;1251:9;1242:7;1238:23;1234:32;1231:2;;;1279:1;1276;1269:12;1231:2;1322:1;1347:53;1392:7;1383:6;1372:9;1368:22;1347:53;:::i;:::-;1337:63;;1293:117;1449:2;1475:53;1520:7;1511:6;1500:9;1496:22;1475:53;:::i;:::-;1465:63;;1420:118;1577:2;1603:53;1648:7;1639:6;1628:9;1624:22;1603:53;:::i;:::-;1593:63;;1548:118;1221:452;;;;;:::o;1679:407::-;;;1804:2;1792:9;1783:7;1779:23;1775:32;1772:2;;;1820:1;1817;1810:12;1772:2;1863:1;1888:53;1933:7;1924:6;1913:9;1909:22;1888:53;:::i;:::-;1878:63;;1834:117;1990:2;2016:53;2061:7;2052:6;2041:9;2037:22;2016:53;:::i;:::-;2006:63;;1961:118;1762:324;;;;;:::o;2092:278::-;;2208:2;2196:9;2187:7;2183:23;2179:32;2176:2;;;2224:1;2221;2214:12;2176:2;2267:1;2292:61;2345:7;2336:6;2325:9;2321:22;2292:61;:::i;:::-;2282:71;;2238:125;2166:204;;;;:::o;2376:118::-;2463:24;2481:5;2463:24;:::i;:::-;2458:3;2451:37;2441:53;;:::o;2500:109::-;2581:21;2596:5;2581:21;:::i;:::-;2576:3;2569:34;2559:50;;:::o;2615:364::-;;2731:39;2764:5;2731:39;:::i;:::-;2786:71;2850:6;2845:3;2786:71;:::i;:::-;2779:78;;2866:52;2911:6;2906:3;2899:4;2892:5;2888:16;2866:52;:::i;:::-;2943:29;2965:6;2943:29;:::i;:::-;2938:3;2934:39;2927:46;;2707:272;;;;;:::o;2985:366::-;;3148:67;3212:2;3207:3;3148:67;:::i;:::-;3141:74;;3224:93;3313:3;3224:93;:::i;:::-;3342:2;3337:3;3333:12;3326:19;;3131:220;;;:::o;3357:366::-;;3520:67;3584:2;3579:3;3520:67;:::i;:::-;3513:74;;3596:93;3685:3;3596:93;:::i;:::-;3714:2;3709:3;3705:12;3698:19;;3503:220;;;:::o;3729:366::-;;3892:67;3956:2;3951:3;3892:67;:::i;:::-;3885:74;;3968:93;4057:3;3968:93;:::i;:::-;4086:2;4081:3;4077:12;4070:19;;3875:220;;;:::o;4101:366::-;;4264:67;4328:2;4323:3;4264:67;:::i;:::-;4257:74;;4340:93;4429:3;4340:93;:::i;:::-;4458:2;4453:3;4449:12;4442:19;;4247:220;;;:::o;4473:366::-;;4636:67;4700:2;4695:3;4636:67;:::i;:::-;4629:74;;4712:93;4801:3;4712:93;:::i;:::-;4830:2;4825:3;4821:12;4814:19;;4619:220;;;:::o;4845:366::-;;5008:67;5072:2;5067:3;5008:67;:::i;:::-;5001:74;;5084:93;5173:3;5084:93;:::i;:::-;5202:2;5197:3;5193:12;5186:19;;4991:220;;;:::o;5217:366::-;;5380:67;5444:2;5439:3;5380:67;:::i;:::-;5373:74;;5456:93;5545:3;5456:93;:::i;:::-;5574:2;5569:3;5565:12;5558:19;;5363:220;;;:::o;5589:118::-;5676:24;5694:5;5676:24;:::i;:::-;5671:3;5664:37;5654:53;;:::o;5713:112::-;5796:22;5812:5;5796:22;:::i;:::-;5791:3;5784:35;5774:51;;:::o;5831:332::-;;5990:2;5979:9;5975:18;5967:26;;6003:71;6071:1;6060:9;6056:17;6047:6;6003:71;:::i;:::-;6084:72;6152:2;6141:9;6137:18;6128:6;6084:72;:::i;:::-;5957:206;;;;;:::o;6169:210::-;;6294:2;6283:9;6279:18;6271:26;;6307:65;6369:1;6358:9;6354:17;6345:6;6307:65;:::i;:::-;6261:118;;;;:::o;6385:313::-;;6536:2;6525:9;6521:18;6513:26;;6585:9;6579:4;6575:20;6571:1;6560:9;6556:17;6549:47;6613:78;6686:4;6677:6;6613:78;:::i;:::-;6605:86;;6503:195;;;;:::o;6704:419::-;;6908:2;6897:9;6893:18;6885:26;;6957:9;6951:4;6947:20;6943:1;6932:9;6928:17;6921:47;6985:131;7111:4;6985:131;:::i;:::-;6977:139;;6875:248;;;:::o;7129:419::-;;7333:2;7322:9;7318:18;7310:26;;7382:9;7376:4;7372:20;7368:1;7357:9;7353:17;7346:47;7410:131;7536:4;7410:131;:::i;:::-;7402:139;;7300:248;;;:::o;7554:419::-;;7758:2;7747:9;7743:18;7735:26;;7807:9;7801:4;7797:20;7793:1;7782:9;7778:17;7771:47;7835:131;7961:4;7835:131;:::i;:::-;7827:139;;7725:248;;;:::o;7979:419::-;;8183:2;8172:9;8168:18;8160:26;;8232:9;8226:4;8222:20;8218:1;8207:9;8203:17;8196:47;8260:131;8386:4;8260:131;:::i;:::-;8252:139;;8150:248;;;:::o;8404:419::-;;8608:2;8597:9;8593:18;8585:26;;8657:9;8651:4;8647:20;8643:1;8632:9;8628:17;8621:47;8685:131;8811:4;8685:131;:::i;:::-;8677:139;;8575:248;;;:::o;8829:419::-;;9033:2;9022:9;9018:18;9010:26;;9082:9;9076:4;9072:20;9068:1;9057:9;9053:17;9046:47;9110:131;9236:4;9110:131;:::i;:::-;9102:139;;9000:248;;;:::o;9254:419::-;;9458:2;9447:9;9443:18;9435:26;;9507:9;9501:4;9497:20;9493:1;9482:9;9478:17;9471:47;9535:131;9661:4;9535:131;:::i;:::-;9527:139;;9425:248;;;:::o;9679:222::-;;9810:2;9799:9;9795:18;9787:26;;9823:71;9891:1;9880:9;9876:17;9867:6;9823:71;:::i;:::-;9777:124;;;;:::o;9907:214::-;;10034:2;10023:9;10019:18;10011:26;;10047:67;10111:1;10100:9;10096:17;10087:6;10047:67;:::i;:::-;10001:120;;;;:::o;10127:99::-;;10213:5;10207:12;10197:22;;10186:40;;;:::o;10232:169::-;;10350:6;10345:3;10338:19;10390:4;10385:3;10381:14;10366:29;;10328:73;;;;:::o;10407:305::-;;10466:20;10484:1;10466:20;:::i;:::-;10461:25;;10500:20;10518:1;10500:20;:::i;:::-;10495:25;;10654:1;10586:66;10582:74;10579:1;10576:81;10573:2;;;10660:18;;:::i;:::-;10573:2;10704:1;10701;10697:9;10690:16;;10451:261;;;;:::o;10718:191::-;;10778:20;10796:1;10778:20;:::i;:::-;10773:25;;10812:20;10830:1;10812:20;:::i;:::-;10807:25;;10851:1;10848;10845:8;10842:2;;;10856:18;;:::i;:::-;10842:2;10901:1;10898;10894:9;10886:17;;10763:146;;;;:::o;10915:96::-;;10981:24;10999:5;10981:24;:::i;:::-;10970:35;;10960:51;;;:::o;11017:90::-;;11094:5;11087:13;11080:21;11069:32;;11059:48;;;:::o;11113:126::-;;11190:42;11183:5;11179:54;11168:65;;11158:81;;;:::o;11245:77::-;;11311:5;11300:16;;11290:32;;;:::o;11328:86::-;;11403:4;11396:5;11392:16;11381:27;;11371:43;;;:::o;11420:307::-;11488:1;11498:113;11512:6;11509:1;11506:13;11498:113;;;11597:1;11592:3;11588:11;11582:18;11578:1;11573:3;11569:11;11562:39;11534:2;11531:1;11527:10;11522:15;;11498:113;;;11629:6;11626:1;11623:13;11620:2;;;11709:1;11700:6;11695:3;11691:16;11684:27;11620:2;11469:258;;;;:::o;11733:320::-;;11814:1;11808:4;11804:12;11794:22;;11861:1;11855:4;11851:12;11882:18;11872:2;;11938:4;11930:6;11926:17;11916:27;;11872:2;12000;11992:6;11989:14;11969:18;11966:38;11963:2;;;12019:18;;:::i;:::-;11963:2;11784:269;;;;:::o;12059:180::-;12107:77;12104:1;12097:88;12204:4;12201:1;12194:15;12228:4;12225:1;12218:15;12245:180;12293:77;12290:1;12283:88;12390:4;12387:1;12380:15;12414:4;12411:1;12404:15;12431:102;;12523:2;12519:7;12514:2;12507:5;12503:14;12499:28;12489:38;;12479:54;;;:::o;12539:222::-;12679:34;12675:1;12667:6;12663:14;12656:58;12748:5;12743:2;12735:6;12731:15;12724:30;12645:116;:::o;12767:221::-;12907:34;12903:1;12895:6;12891:14;12884:58;12976:4;12971:2;12963:6;12959:15;12952:29;12873:115;:::o;12994:225::-;13134:34;13130:1;13122:6;13118:14;13111:58;13203:8;13198:2;13190:6;13186:15;13179:33;13100:119;:::o;13225:227::-;13365:34;13361:1;13353:6;13349:14;13342:58;13434:10;13429:2;13421:6;13417:15;13410:35;13331:121;:::o;13458:224::-;13598:34;13594:1;13586:6;13582:14;13575:58;13667:7;13662:2;13654:6;13650:15;13643:32;13564:118;:::o;13688:223::-;13828:34;13824:1;13816:6;13812:14;13805:58;13897:6;13892:2;13884:6;13880:15;13873:31;13794:117;:::o;13917:224::-;14057:34;14053:1;14045:6;14041:14;14034:58;14126:7;14121:2;14113:6;14109:15;14102:32;14023:118;:::o;14147:122::-;14220:24;14238:5;14220:24;:::i;:::-;14213:5;14210:35;14200:2;;14259:1;14256;14249:12;14200:2;14190:79;:::o;14275:116::-;14345:21;14360:5;14345:21;:::i;:::-;14338:5;14335:32;14325:2;;14381:1;14378;14371:12;14325:2;14315:76;:::o;14397:122::-;14470:24;14488:5;14470:24;:::i;:::-;14463:5;14460:35;14450:2;;14509:1;14506;14499:12;14450:2;14440:79;:::o",
  "source": "// SPDX-License-Identifier: <SPDX-License>\r\npragma solidity ^0.8.2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract TokenLP1 is ERC20{\r\n    constructor () ERC20(\"ElonDoge\", \"ELD\") {\r\n        _mint(address(this), 1000000000000000000000);\r\n    }\r\n    \r\n    function faucet(address _token,uint _amount) public{\r\n        this.transfer(_token,_amount);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Blackie\\DeFi-Application\\src\\Contracts\\TokenLP1.sol",
  "ast": {
    "absolutePath": "/C/Users/Blackie/DeFi-Application/src/Contracts/TokenLP1.sol",
    "exportedSymbols": {
      "Context": [
        1261
      ],
      "ERC20": [
        1160
      ],
      "IERC20": [
        1238
      ],
      "TokenLP1": [
        622
      ]
    },
    "id": 623,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 587,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "44:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 588,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 623,
        "sourceUnit": 1161,
        "src": "71:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 589,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1160,
              "src": "151:5:6"
            },
            "id": 590,
            "nodeType": "InheritanceSpecifier",
            "src": "151:5:6"
          }
        ],
        "contractDependencies": [
          1160,
          1238,
          1261
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 622,
        "linearizedBaseContracts": [
          622,
          1160,
          1238,
          1261
        ],
        "name": "TokenLP1",
        "nameLocation": "139:8:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 605,
              "nodeType": "Block",
              "src": "203:63:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 600,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "228:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLP1_$622",
                              "typeString": "contract TokenLP1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLP1_$622",
                              "typeString": "contract TokenLP1"
                            }
                          ],
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "220:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 598,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "220:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "220:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030303030",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "235:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 597,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "214:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "214:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "214:44:6"
                }
              ]
            },
            "id": 606,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456c6f6e446f6765",
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "184:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ef273c56075e82ec06ffb9e1dbea3603e44a7dc4ec55d8d9435b3a4d617cfcce",
                      "typeString": "literal_string \"ElonDoge\""
                    },
                    "value": "ElonDoge"
                  },
                  {
                    "hexValue": "454c44",
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "196:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_680649459851a12b125f06840eb5c74a8af79c66080d1aeacba210c9b6c8a63f",
                      "typeString": "literal_string \"ELD\""
                    },
                    "value": "ELD"
                  }
                ],
                "id": 595,
                "modifierName": {
                  "id": 592,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1160,
                  "src": "178:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "178:24:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "175:2:6"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:6"
            },
            "scope": 622,
            "src": "163:103:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "329:48:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 616,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "354:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 617,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "361:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 613,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "340:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLP1_$622",
                          "typeString": "contract TokenLP1"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 773,
                      "src": "340:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "340:29:6"
                }
              ]
            },
            "functionSelector": "7b56c2b2",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nameLocation": "287:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "302:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "294:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "314:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "309:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:29:6"
            },
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:6"
            },
            "scope": 622,
            "src": "278:99:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 623,
        "src": "130:250:6"
      }
    ],
    "src": "44:336:6"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Blackie/DeFi-Application/src/Contracts/TokenLP1.sol",
    "exportedSymbols": {
      "Context": [
        1261
      ],
      "ERC20": [
        1160
      ],
      "IERC20": [
        1238
      ],
      "TokenLP1": [
        622
      ]
    },
    "id": 623,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 587,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "44:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 588,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 623,
        "sourceUnit": 1161,
        "src": "71:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 589,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1160,
              "src": "151:5:6"
            },
            "id": 590,
            "nodeType": "InheritanceSpecifier",
            "src": "151:5:6"
          }
        ],
        "contractDependencies": [
          1160,
          1238,
          1261
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 622,
        "linearizedBaseContracts": [
          622,
          1160,
          1238,
          1261
        ],
        "name": "TokenLP1",
        "nameLocation": "139:8:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 605,
              "nodeType": "Block",
              "src": "203:63:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 600,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "228:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenLP1_$622",
                              "typeString": "contract TokenLP1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenLP1_$622",
                              "typeString": "contract TokenLP1"
                            }
                          ],
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "220:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 598,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "220:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "220:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030303030",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "235:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 597,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1041,
                      "src": "214:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "214:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "214:44:6"
                }
              ]
            },
            "id": 606,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456c6f6e446f6765",
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "184:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ef273c56075e82ec06ffb9e1dbea3603e44a7dc4ec55d8d9435b3a4d617cfcce",
                      "typeString": "literal_string \"ElonDoge\""
                    },
                    "value": "ElonDoge"
                  },
                  {
                    "hexValue": "454c44",
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "196:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_680649459851a12b125f06840eb5c74a8af79c66080d1aeacba210c9b6c8a63f",
                      "typeString": "literal_string \"ELD\""
                    },
                    "value": "ELD"
                  }
                ],
                "id": 595,
                "modifierName": {
                  "id": 592,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1160,
                  "src": "178:5:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "178:24:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "175:2:6"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:0:6"
            },
            "scope": 622,
            "src": "163:103:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "329:48:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 616,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "354:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 617,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "361:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 613,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "340:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenLP1_$622",
                          "typeString": "contract TokenLP1"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 773,
                      "src": "340:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "340:29:6"
                }
              ]
            },
            "functionSelector": "7b56c2b2",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nameLocation": "287:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "302:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "294:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "314:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "309:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:29:6"
            },
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:6"
            },
            "scope": 622,
            "src": "278:99:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 623,
        "src": "130:250:6"
      }
    ],
    "src": "44:336:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb64e54023314649DD56F5DeFdD86357cdA39A6E5",
      "transactionHash": "0xb8087e4f96270eead6c9aab3542db814e972fc32747c5ea2055b278077bea8ec"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-30T20:40:13.942Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}