{
  "contractName": "Elon",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "faucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Blackie/DeFi-Application/src/Contracts/Elon.sol\":\"Elon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Blackie/DeFi-Application/src/Contracts/Elon.sol\":{\"keccak256\":\"0xb74bbcbbd65a68399658f5255487889b76edb62592fc3427661c666c9c826826\",\"urls\":[\"bzz-raw://bcddf84464bcaaa4758d9db5ec37c72e0b317fe2bd08ca2cb8688246bb5d2b91\",\"dweb:/ipfs/QmPAXDMZRhfWkTWNCCS6XAb2QM1rwDkBfvJdsrPGeRdoyj\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600481526020017f456c6f6e000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f454c4e00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200023d565b508060049080519060200190620000af9291906200023d565b505050620000cd30683635c9adc5dea00000620000d360201b60201c565b62000499565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000146576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013d9062000325565b60405180910390fd5b6200015a600083836200023860201b60201c565b80600260008282546200016e919062000375565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001c5919062000375565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022c919062000347565b60405180910390a35050565b505050565b8280546200024b90620003dc565b90600052602060002090601f0160209004810192826200026f5760008555620002bb565b82601f106200028a57805160ff1916838001178555620002bb565b82800160010185558215620002bb579182015b82811115620002ba5782518255916020019190600101906200029d565b5b509050620002ca9190620002ce565b5090565b5b80821115620002e9576000816000905550600101620002cf565b5090565b6000620002fc601f8362000364565b9150620003098262000470565b602082019050919050565b6200031f81620003d2565b82525050565b600060208201905081810360008301526200034081620002ed565b9050919050565b60006020820190506200035e600083018462000314565b92915050565b600082825260208201905092915050565b60006200038282620003d2565b91506200038f83620003d2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003c757620003c662000412565b5b828201905092915050565b6000819050919050565b60006002820490506001821680620003f557607f821691505b602082108114156200040c576200040b62000441565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61152f80620004a96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063dd62ed3e14610251578063de5f72fd14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161028b565b6040516100ce9190610f72565b60405180910390f35b6100f160048036038101906100ec9190610d50565b61031d565b6040516100fe9190610f57565b60405180910390f35b61010f61033b565b60405161011c9190611074565b60405180910390f35b61013f600480360381019061013a9190610d01565b610345565b60405161014c9190610f57565b60405180910390f35b61015d610446565b60405161016a919061108f565b60405180910390f35b61018d60048036038101906101889190610d50565b61044f565b60405161019a9190610f57565b60405180910390f35b6101bd60048036038101906101b89190610c9c565b6104fb565b6040516101ca9190611074565b60405180910390f35b6101db610543565b6040516101e89190610f72565b60405180910390f35b61020b60048036038101906102069190610d50565b6105d5565b6040516102189190610f57565b60405180910390f35b61023b60048036038101906102369190610d50565b6106c9565b6040516102489190610f57565b60405180910390f35b61026b60048036038101906102669190610cc5565b6106e7565b6040516102789190611074565b60405180910390f35b61028961076e565b005b60606003805461029a906111ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102c6906111ea565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b600061033161032a610806565b848461080e565b6001905092915050565b6000600254905090565b60006103528484846109d9565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061039d610806565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041490610ff4565b60405180910390fd5b61043a85610429610806565b8584610435919061111c565b61080e565b60019150509392505050565b60006012905090565b60006104f161045c610806565b84846001600061046a610806565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ec91906110c6565b61080e565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610552906111ea565b80601f016020809104026020016040519081016040528092919081815260200182805461057e906111ea565b80156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b5050505050905090565b600080600160006105e4610806565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890611054565b60405180910390fd5b6106be6106ac610806565b8585846106b9919061111c565b61080e565b600191505092915050565b60006106dd6106d6610806565b84846109d9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a76400006040518363ffffffff1660e01b81526004016107b1929190610f2e565b602060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108039190610d8c565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561087e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087590611034565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e590610fb4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109cc9190611074565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090611014565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090610f94565b60405180910390fd5b610ac4838383610c58565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4190610fd4565b60405180910390fd5b8181610b56919061111c565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610be691906110c6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c4a9190611074565b60405180910390a350505050565b505050565b600081359050610c6c816114b4565b92915050565b600081519050610c81816114cb565b92915050565b600081359050610c96816114e2565b92915050565b600060208284031215610cae57600080fd5b6000610cbc84828501610c5d565b91505092915050565b60008060408385031215610cd857600080fd5b6000610ce685828601610c5d565b9250506020610cf785828601610c5d565b9150509250929050565b600080600060608486031215610d1657600080fd5b6000610d2486828701610c5d565b9350506020610d3586828701610c5d565b9250506040610d4686828701610c87565b9150509250925092565b60008060408385031215610d6357600080fd5b6000610d7185828601610c5d565b9250506020610d8285828601610c87565b9150509250929050565b600060208284031215610d9e57600080fd5b6000610dac84828501610c72565b91505092915050565b610dbe81611150565b82525050565b610dcd81611162565b82525050565b610ddc816111a5565b82525050565b6000610ded826110aa565b610df781856110b5565b9350610e078185602086016111b7565b610e108161127a565b840191505092915050565b6000610e286023836110b5565b9150610e338261128b565b604082019050919050565b6000610e4b6022836110b5565b9150610e56826112da565b604082019050919050565b6000610e6e6026836110b5565b9150610e7982611329565b604082019050919050565b6000610e916028836110b5565b9150610e9c82611378565b604082019050919050565b6000610eb46025836110b5565b9150610ebf826113c7565b604082019050919050565b6000610ed76024836110b5565b9150610ee282611416565b604082019050919050565b6000610efa6025836110b5565b9150610f0582611465565b604082019050919050565b610f198161118e565b82525050565b610f2881611198565b82525050565b6000604082019050610f436000830185610db5565b610f506020830184610dd3565b9392505050565b6000602082019050610f6c6000830184610dc4565b92915050565b60006020820190508181036000830152610f8c8184610de2565b905092915050565b60006020820190508181036000830152610fad81610e1b565b9050919050565b60006020820190508181036000830152610fcd81610e3e565b9050919050565b60006020820190508181036000830152610fed81610e61565b9050919050565b6000602082019050818103600083015261100d81610e84565b9050919050565b6000602082019050818103600083015261102d81610ea7565b9050919050565b6000602082019050818103600083015261104d81610eca565b9050919050565b6000602082019050818103600083015261106d81610eed565b9050919050565b60006020820190506110896000830184610f10565b92915050565b60006020820190506110a46000830184610f1f565b92915050565b600081519050919050565b600082825260208201905092915050565b60006110d18261118e565b91506110dc8361118e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111115761111061121c565b5b828201905092915050565b60006111278261118e565b91506111328361118e565b9250828210156111455761114461121c565b5b828203905092915050565b600061115b8261116e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006111b08261118e565b9050919050565b60005b838110156111d55780820151818401526020810190506111ba565b838111156111e4576000848401525b50505050565b6000600282049050600182168061120257607f821691505b602082108114156112165761121561124b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6114bd81611150565b81146114c857600080fd5b50565b6114d481611162565b81146114df57600080fd5b50565b6114eb8161118e565b81146114f657600080fd5b5056fea2646970667358221220afa01777fe44f044f504c447d929a0c70316aeffe85daa9ef43c1e395827fec864736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d3578063a457c2d7146101f1578063a9059cbb14610221578063dd62ed3e14610251578063de5f72fd14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161028b565b6040516100ce9190610f72565b60405180910390f35b6100f160048036038101906100ec9190610d50565b61031d565b6040516100fe9190610f57565b60405180910390f35b61010f61033b565b60405161011c9190611074565b60405180910390f35b61013f600480360381019061013a9190610d01565b610345565b60405161014c9190610f57565b60405180910390f35b61015d610446565b60405161016a919061108f565b60405180910390f35b61018d60048036038101906101889190610d50565b61044f565b60405161019a9190610f57565b60405180910390f35b6101bd60048036038101906101b89190610c9c565b6104fb565b6040516101ca9190611074565b60405180910390f35b6101db610543565b6040516101e89190610f72565b60405180910390f35b61020b60048036038101906102069190610d50565b6105d5565b6040516102189190610f57565b60405180910390f35b61023b60048036038101906102369190610d50565b6106c9565b6040516102489190610f57565b60405180910390f35b61026b60048036038101906102669190610cc5565b6106e7565b6040516102789190611074565b60405180910390f35b61028961076e565b005b60606003805461029a906111ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102c6906111ea565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b5050505050905090565b600061033161032a610806565b848461080e565b6001905092915050565b6000600254905090565b60006103528484846109d9565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061039d610806565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041490610ff4565b60405180910390fd5b61043a85610429610806565b8584610435919061111c565b61080e565b60019150509392505050565b60006012905090565b60006104f161045c610806565b84846001600061046a610806565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ec91906110c6565b61080e565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610552906111ea565b80601f016020809104026020016040519081016040528092919081815260200182805461057e906111ea565b80156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b5050505050905090565b600080600160006105e4610806565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069890611054565b60405180910390fd5b6106be6106ac610806565b8585846106b9919061111c565b61080e565b600191505092915050565b60006106dd6106d6610806565b84846109d9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a76400006040518363ffffffff1660e01b81526004016107b1929190610f2e565b602060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108039190610d8c565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561087e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087590611034565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e590610fb4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109cc9190611074565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4090611014565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090610f94565b60405180910390fd5b610ac4838383610c58565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4190610fd4565b60405180910390fd5b8181610b56919061111c565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610be691906110c6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c4a9190611074565b60405180910390a350505050565b505050565b600081359050610c6c816114b4565b92915050565b600081519050610c81816114cb565b92915050565b600081359050610c96816114e2565b92915050565b600060208284031215610cae57600080fd5b6000610cbc84828501610c5d565b91505092915050565b60008060408385031215610cd857600080fd5b6000610ce685828601610c5d565b9250506020610cf785828601610c5d565b9150509250929050565b600080600060608486031215610d1657600080fd5b6000610d2486828701610c5d565b9350506020610d3586828701610c5d565b9250506040610d4686828701610c87565b9150509250925092565b60008060408385031215610d6357600080fd5b6000610d7185828601610c5d565b9250506020610d8285828601610c87565b9150509250929050565b600060208284031215610d9e57600080fd5b6000610dac84828501610c72565b91505092915050565b610dbe81611150565b82525050565b610dcd81611162565b82525050565b610ddc816111a5565b82525050565b6000610ded826110aa565b610df781856110b5565b9350610e078185602086016111b7565b610e108161127a565b840191505092915050565b6000610e286023836110b5565b9150610e338261128b565b604082019050919050565b6000610e4b6022836110b5565b9150610e56826112da565b604082019050919050565b6000610e6e6026836110b5565b9150610e7982611329565b604082019050919050565b6000610e916028836110b5565b9150610e9c82611378565b604082019050919050565b6000610eb46025836110b5565b9150610ebf826113c7565b604082019050919050565b6000610ed76024836110b5565b9150610ee282611416565b604082019050919050565b6000610efa6025836110b5565b9150610f0582611465565b604082019050919050565b610f198161118e565b82525050565b610f2881611198565b82525050565b6000604082019050610f436000830185610db5565b610f506020830184610dd3565b9392505050565b6000602082019050610f6c6000830184610dc4565b92915050565b60006020820190508181036000830152610f8c8184610de2565b905092915050565b60006020820190508181036000830152610fad81610e1b565b9050919050565b60006020820190508181036000830152610fcd81610e3e565b9050919050565b60006020820190508181036000830152610fed81610e61565b9050919050565b6000602082019050818103600083015261100d81610e84565b9050919050565b6000602082019050818103600083015261102d81610ea7565b9050919050565b6000602082019050818103600083015261104d81610eca565b9050919050565b6000602082019050818103600083015261106d81610eed565b9050919050565b60006020820190506110896000830184610f10565b92915050565b60006020820190506110a46000830184610f1f565b92915050565b600081519050919050565b600082825260208201905092915050565b60006110d18261118e565b91506110dc8361118e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111115761111061121c565b5b828201905092915050565b60006111278261118e565b91506111328361118e565b9250828210156111455761114461121c565b5b828203905092915050565b600061115b8261116e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006111b08261118e565b9050919050565b60005b838110156111d55780820151818401526020810190506111ba565b838111156111e4576000848401525b50505050565b6000600282049050600182168061120257607f821691505b602082108114156112165761121561124b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6114bd81611150565b81146114c857600080fd5b50565b6114d481611162565b81146114df57600080fd5b50565b6114eb8161118e565b81146114f657600080fd5b5056fea2646970667358221220afa01777fe44f044f504c447d929a0c70316aeffe85daa9ef43c1e395827fec864736f6c63430008030033",
  "immutableReferences": {},
  "sourceMap": "130:231:1:-:0;;;159:99;;;;;;;;;;1842:114:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:5;1909;:13;;;;;;;;;;;;:::i;:::-;;1942:7;1932;:17;;;;;;;;;;;;:::i;:::-;;1842:114;;206:44:1::1;220:4;227:22;206:5;;;:44;;:::i;:::-;130:231:::0;;7940:330:8;8042:1;8023:21;;:7;:21;;;;8015:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8091:49;8120:1;8124:7;8133:6;8091:20;;;:49;;:::i;:::-;8167:6;8151:12;;:22;;;;;;;:::i;:::-;;;;;;;;8205:6;8183:9;:18;8193:7;8183:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8247:7;8226:37;;8243:1;8226:37;;;8256:6;8226:37;;;;;;:::i;:::-;;;;;;;;7940:330;;:::o;10423:92::-;;;;:::o;130:231:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:366:11:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:118::-;466:24;484:5;466:24;:::i;:::-;461:3;454:37;444:53;;:::o;503:419::-;;707:2;696:9;692:18;684:26;;756:9;750:4;746:20;742:1;731:9;727:17;720:47;784:131;910:4;784:131;:::i;:::-;776:139;;674:248;;;:::o;928:222::-;;1059:2;1048:9;1044:18;1036:26;;1072:71;1140:1;1129:9;1125:17;1116:6;1072:71;:::i;:::-;1026:124;;;;:::o;1156:169::-;;1274:6;1269:3;1262:19;1314:4;1309:3;1305:14;1290:29;;1252:73;;;;:::o;1331:305::-;;1390:20;1408:1;1390:20;:::i;:::-;1385:25;;1424:20;1442:1;1424:20;:::i;:::-;1419:25;;1578:1;1510:66;1506:74;1503:1;1500:81;1497:2;;;1584:18;;:::i;:::-;1497:2;1628:1;1625;1621:9;1614:16;;1375:261;;;;:::o;1642:77::-;;1708:5;1697:16;;1687:32;;;:::o;1725:320::-;;1806:1;1800:4;1796:12;1786:22;;1853:1;1847:4;1843:12;1874:18;1864:2;;1930:4;1922:6;1918:17;1908:27;;1864:2;1992;1984:6;1981:14;1961:18;1958:38;1955:2;;;2011:18;;:::i;:::-;1955:2;1776:269;;;;:::o;2051:180::-;2099:77;2096:1;2089:88;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2237:180;2285:77;2282:1;2275:88;2382:4;2379:1;2372:15;2406:4;2403:1;2396:15;2423:181;2563:33;2559:1;2551:6;2547:14;2540:57;2529:75;:::o;130:231:1:-;;;;;;;",
  "deployedSourceMap": "130:231:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3082:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4724:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2940:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5533:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3246:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2223:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6232:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3574:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3804:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;270:88:1;;;:::i;:::-;;2021:89:8;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;4199:12;:10;:12::i;:::-;4213:7;4222:6;4190:8;:39::i;:::-;4246:4;4239:11;;4091:166;;;;:::o;3082:106::-;3143:7;3169:12;;3162:19;;3082:106;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;4893:24;4920:11;:19;4932:6;4920:19;;;;;;;;;;;;;;;:33;4940:12;:10;:12::i;:::-;4920:33;;;;;;;;;;;;;;;;4893:60;;4991:6;4971:16;:26;;4963:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5052:57;5061:6;5069:12;:10;:12::i;:::-;5102:6;5083:16;:25;;;;:::i;:::-;5052:8;:57::i;:::-;5127:4;5120:11;;;4724:414;;;;;:::o;2940:82::-;2989:5;3013:2;3006:9;;2940:82;:::o;5533:212::-;5621:4;5637:80;5646:12;:10;:12::i;:::-;5660:7;5706:10;5669:11;:25;5681:12;:10;:12::i;:::-;5669:25;;;;;;;;;;;;;;;:34;5695:7;5669:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5637:8;:80::i;:::-;5734:4;5727:11;;5533:212;;;;:::o;3246:125::-;3320:7;3346:9;:18;3356:7;3346:18;;;;;;;;;;;;;;;;3339:25;;3246:125;;;:::o;2223:93::-;2270:13;2302:7;2295:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:93;:::o;6232:371::-;6325:4;6341:24;6368:11;:25;6380:12;:10;:12::i;:::-;6368:25;;;;;;;;;;;;;;;:34;6394:7;6368:34;;;;;;;;;;;;;;;;6341:61;;6440:15;6420:16;:35;;6412:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6507:67;6516:12;:10;:12::i;:::-;6530:7;6558:15;6539:16;:34;;;;:::i;:::-;6507:8;:67::i;:::-;6592:4;6585:11;;;6232:371;;;;:::o;3574:172::-;3660:4;3676:42;3686:12;:10;:12::i;:::-;3700:9;3711:6;3676:9;:42::i;:::-;3735:4;3728:11;;3574:172;;;;:::o;3804:149::-;3893:7;3919:11;:18;3931:5;3919:18;;;;;;;;;;;;;;;:27;3938:7;3919:27;;;;;;;;;;;;;;;;3912:34;;3804:149;;;;:::o;270:88:1:-;305:4;:13;;;319:10;330:19;305:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;270:88::o;586:96:10:-;639:7;665:10;658:17;;586:96;:::o;9496:340:8:-;9614:1;9597:19;;:5;:19;;;;9589:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9694:1;9675:21;;:7;:21;;;;9667:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9776:6;9746:11;:18;9758:5;9746:18;;;;;;;;;;;;;;;:27;9765:7;9746:27;;;;;;;;;;;;;;;:36;;;;9813:7;9797:32;;9806:5;9797:32;;;9822:6;9797:32;;;;;;:::i;:::-;;;;;;;;9496:340;;;:::o;7077:592::-;7200:1;7182:20;;:6;:20;;;;7174:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7283:1;7262:23;;:9;:23;;;;7254:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7336:47;7357:6;7365:9;7376:6;7336:20;:47::i;:::-;7394:21;7418:9;:17;7428:6;7418:17;;;;;;;;;;;;;;;;7394:41;;7470:6;7453:13;:23;;7445:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7565:6;7549:13;:22;;;;:::i;:::-;7529:9;:17;7539:6;7529:17;;;;;;;;;;;;;;;:42;;;;7605:6;7581:9;:20;7591:9;7581:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7644:9;7627:35;;7636:6;7627:35;;;7655:6;7627:35;;;;;;:::i;:::-;;;;;;;;7077:592;;;;:::o;10423:92::-;;;;:::o;7:139:11:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:407::-;;;833:2;821:9;812:7;808:23;804:32;801:2;;;849:1;846;839:12;801:2;892:1;917:53;962:7;953:6;942:9;938:22;917:53;:::i;:::-;907:63;;863:117;1019:2;1045:53;1090:7;1081:6;1070:9;1066:22;1045:53;:::i;:::-;1035:63;;990:118;791:324;;;;;:::o;1121:552::-;;;;1263:2;1251:9;1242:7;1238:23;1234:32;1231:2;;;1279:1;1276;1269:12;1231:2;1322:1;1347:53;1392:7;1383:6;1372:9;1368:22;1347:53;:::i;:::-;1337:63;;1293:117;1449:2;1475:53;1520:7;1511:6;1500:9;1496:22;1475:53;:::i;:::-;1465:63;;1420:118;1577:2;1603:53;1648:7;1639:6;1628:9;1624:22;1603:53;:::i;:::-;1593:63;;1548:118;1221:452;;;;;:::o;1679:407::-;;;1804:2;1792:9;1783:7;1779:23;1775:32;1772:2;;;1820:1;1817;1810:12;1772:2;1863:1;1888:53;1933:7;1924:6;1913:9;1909:22;1888:53;:::i;:::-;1878:63;;1834:117;1990:2;2016:53;2061:7;2052:6;2041:9;2037:22;2016:53;:::i;:::-;2006:63;;1961:118;1762:324;;;;;:::o;2092:278::-;;2208:2;2196:9;2187:7;2183:23;2179:32;2176:2;;;2224:1;2221;2214:12;2176:2;2267:1;2292:61;2345:7;2336:6;2325:9;2321:22;2292:61;:::i;:::-;2282:71;;2238:125;2166:204;;;;:::o;2376:118::-;2463:24;2481:5;2463:24;:::i;:::-;2458:3;2451:37;2441:53;;:::o;2500:109::-;2581:21;2596:5;2581:21;:::i;:::-;2576:3;2569:34;2559:50;;:::o;2615:183::-;2728:63;2785:5;2728:63;:::i;:::-;2723:3;2716:76;2706:92;;:::o;2804:364::-;;2920:39;2953:5;2920:39;:::i;:::-;2975:71;3039:6;3034:3;2975:71;:::i;:::-;2968:78;;3055:52;3100:6;3095:3;3088:4;3081:5;3077:16;3055:52;:::i;:::-;3132:29;3154:6;3132:29;:::i;:::-;3127:3;3123:39;3116:46;;2896:272;;;;;:::o;3174:366::-;;3337:67;3401:2;3396:3;3337:67;:::i;:::-;3330:74;;3413:93;3502:3;3413:93;:::i;:::-;3531:2;3526:3;3522:12;3515:19;;3320:220;;;:::o;3546:366::-;;3709:67;3773:2;3768:3;3709:67;:::i;:::-;3702:74;;3785:93;3874:3;3785:93;:::i;:::-;3903:2;3898:3;3894:12;3887:19;;3692:220;;;:::o;3918:366::-;;4081:67;4145:2;4140:3;4081:67;:::i;:::-;4074:74;;4157:93;4246:3;4157:93;:::i;:::-;4275:2;4270:3;4266:12;4259:19;;4064:220;;;:::o;4290:366::-;;4453:67;4517:2;4512:3;4453:67;:::i;:::-;4446:74;;4529:93;4618:3;4529:93;:::i;:::-;4647:2;4642:3;4638:12;4631:19;;4436:220;;;:::o;4662:366::-;;4825:67;4889:2;4884:3;4825:67;:::i;:::-;4818:74;;4901:93;4990:3;4901:93;:::i;:::-;5019:2;5014:3;5010:12;5003:19;;4808:220;;;:::o;5034:366::-;;5197:67;5261:2;5256:3;5197:67;:::i;:::-;5190:74;;5273:93;5362:3;5273:93;:::i;:::-;5391:2;5386:3;5382:12;5375:19;;5180:220;;;:::o;5406:366::-;;5569:67;5633:2;5628:3;5569:67;:::i;:::-;5562:74;;5645:93;5734:3;5645:93;:::i;:::-;5763:2;5758:3;5754:12;5747:19;;5552:220;;;:::o;5778:118::-;5865:24;5883:5;5865:24;:::i;:::-;5860:3;5853:37;5843:53;;:::o;5902:112::-;5985:22;6001:5;5985:22;:::i;:::-;5980:3;5973:35;5963:51;;:::o;6020:384::-;;6205:2;6194:9;6190:18;6182:26;;6218:71;6286:1;6275:9;6271:17;6262:6;6218:71;:::i;:::-;6299:98;6393:2;6382:9;6378:18;6369:6;6299:98;:::i;:::-;6172:232;;;;;:::o;6410:210::-;;6535:2;6524:9;6520:18;6512:26;;6548:65;6610:1;6599:9;6595:17;6586:6;6548:65;:::i;:::-;6502:118;;;;:::o;6626:313::-;;6777:2;6766:9;6762:18;6754:26;;6826:9;6820:4;6816:20;6812:1;6801:9;6797:17;6790:47;6854:78;6927:4;6918:6;6854:78;:::i;:::-;6846:86;;6744:195;;;;:::o;6945:419::-;;7149:2;7138:9;7134:18;7126:26;;7198:9;7192:4;7188:20;7184:1;7173:9;7169:17;7162:47;7226:131;7352:4;7226:131;:::i;:::-;7218:139;;7116:248;;;:::o;7370:419::-;;7574:2;7563:9;7559:18;7551:26;;7623:9;7617:4;7613:20;7609:1;7598:9;7594:17;7587:47;7651:131;7777:4;7651:131;:::i;:::-;7643:139;;7541:248;;;:::o;7795:419::-;;7999:2;7988:9;7984:18;7976:26;;8048:9;8042:4;8038:20;8034:1;8023:9;8019:17;8012:47;8076:131;8202:4;8076:131;:::i;:::-;8068:139;;7966:248;;;:::o;8220:419::-;;8424:2;8413:9;8409:18;8401:26;;8473:9;8467:4;8463:20;8459:1;8448:9;8444:17;8437:47;8501:131;8627:4;8501:131;:::i;:::-;8493:139;;8391:248;;;:::o;8645:419::-;;8849:2;8838:9;8834:18;8826:26;;8898:9;8892:4;8888:20;8884:1;8873:9;8869:17;8862:47;8926:131;9052:4;8926:131;:::i;:::-;8918:139;;8816:248;;;:::o;9070:419::-;;9274:2;9263:9;9259:18;9251:26;;9323:9;9317:4;9313:20;9309:1;9298:9;9294:17;9287:47;9351:131;9477:4;9351:131;:::i;:::-;9343:139;;9241:248;;;:::o;9495:419::-;;9699:2;9688:9;9684:18;9676:26;;9748:9;9742:4;9738:20;9734:1;9723:9;9719:17;9712:47;9776:131;9902:4;9776:131;:::i;:::-;9768:139;;9666:248;;;:::o;9920:222::-;;10051:2;10040:9;10036:18;10028:26;;10064:71;10132:1;10121:9;10117:17;10108:6;10064:71;:::i;:::-;10018:124;;;;:::o;10148:214::-;;10275:2;10264:9;10260:18;10252:26;;10288:67;10352:1;10341:9;10337:17;10328:6;10288:67;:::i;:::-;10242:120;;;;:::o;10368:99::-;;10454:5;10448:12;10438:22;;10427:40;;;:::o;10473:169::-;;10591:6;10586:3;10579:19;10631:4;10626:3;10622:14;10607:29;;10569:73;;;;:::o;10648:305::-;;10707:20;10725:1;10707:20;:::i;:::-;10702:25;;10741:20;10759:1;10741:20;:::i;:::-;10736:25;;10895:1;10827:66;10823:74;10820:1;10817:81;10814:2;;;10901:18;;:::i;:::-;10814:2;10945:1;10942;10938:9;10931:16;;10692:261;;;;:::o;10959:191::-;;11019:20;11037:1;11019:20;:::i;:::-;11014:25;;11053:20;11071:1;11053:20;:::i;:::-;11048:25;;11092:1;11089;11086:8;11083:2;;;11097:18;;:::i;:::-;11083:2;11142:1;11139;11135:9;11127:17;;11004:146;;;;:::o;11156:96::-;;11222:24;11240:5;11222:24;:::i;:::-;11211:35;;11201:51;;;:::o;11258:90::-;;11335:5;11328:13;11321:21;11310:32;;11300:48;;;:::o;11354:126::-;;11431:42;11424:5;11420:54;11409:65;;11399:81;;;:::o;11486:77::-;;11552:5;11541:16;;11531:32;;;:::o;11569:86::-;;11644:4;11637:5;11633:16;11622:27;;11612:43;;;:::o;11661:139::-;;11770:24;11788:5;11770:24;:::i;:::-;11757:37;;11747:53;;;:::o;11806:307::-;11874:1;11884:113;11898:6;11895:1;11892:13;11884:113;;;11983:1;11978:3;11974:11;11968:18;11964:1;11959:3;11955:11;11948:39;11920:2;11917:1;11913:10;11908:15;;11884:113;;;12015:6;12012:1;12009:13;12006:2;;;12095:1;12086:6;12081:3;12077:16;12070:27;12006:2;11855:258;;;;:::o;12119:320::-;;12200:1;12194:4;12190:12;12180:22;;12247:1;12241:4;12237:12;12268:18;12258:2;;12324:4;12316:6;12312:17;12302:27;;12258:2;12386;12378:6;12375:14;12355:18;12352:38;12349:2;;;12405:18;;:::i;:::-;12349:2;12170:269;;;;:::o;12445:180::-;12493:77;12490:1;12483:88;12590:4;12587:1;12580:15;12614:4;12611:1;12604:15;12631:180;12679:77;12676:1;12669:88;12776:4;12773:1;12766:15;12800:4;12797:1;12790:15;12817:102;;12909:2;12905:7;12900:2;12893:5;12889:14;12885:28;12875:38;;12865:54;;;:::o;12925:222::-;13065:34;13061:1;13053:6;13049:14;13042:58;13134:5;13129:2;13121:6;13117:15;13110:30;13031:116;:::o;13153:221::-;13293:34;13289:1;13281:6;13277:14;13270:58;13362:4;13357:2;13349:6;13345:15;13338:29;13259:115;:::o;13380:225::-;13520:34;13516:1;13508:6;13504:14;13497:58;13589:8;13584:2;13576:6;13572:15;13565:33;13486:119;:::o;13611:227::-;13751:34;13747:1;13739:6;13735:14;13728:58;13820:10;13815:2;13807:6;13803:15;13796:35;13717:121;:::o;13844:224::-;13984:34;13980:1;13972:6;13968:14;13961:58;14053:7;14048:2;14040:6;14036:15;14029:32;13950:118;:::o;14074:223::-;14214:34;14210:1;14202:6;14198:14;14191:58;14283:6;14278:2;14270:6;14266:15;14259:31;14180:117;:::o;14303:224::-;14443:34;14439:1;14431:6;14427:14;14420:58;14512:7;14507:2;14499:6;14495:15;14488:32;14409:118;:::o;14533:122::-;14606:24;14624:5;14606:24;:::i;:::-;14599:5;14596:35;14586:2;;14645:1;14642;14635:12;14586:2;14576:79;:::o;14661:116::-;14731:21;14746:5;14731:21;:::i;:::-;14724:5;14721:32;14711:2;;14767:1;14764;14757:12;14711:2;14701:76;:::o;14783:122::-;14856:24;14874:5;14856:24;:::i;:::-;14849:5;14846:35;14836:2;;14895:1;14892;14885:12;14836:2;14826:79;:::o",
  "source": "// SPDX-License-Identifier: <SPDX-License>\r\npragma solidity ^0.8.2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract Elon is ERC20{\r\n    constructor () ERC20(\"Elon\", \"ELN\") {\r\n        _mint(address(this), 1000000000000000000000);\r\n    }\r\n    \r\n    function faucet() public{\r\n        this.transfer(msg.sender,1000000000000000000);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Blackie\\DeFi-Application\\src\\Contracts\\Elon.sol",
  "ast": {
    "absolutePath": "/C/Users/Blackie/DeFi-Application/src/Contracts/Elon.sol",
    "exportedSymbols": {
      "Context": [
        1249
      ],
      "ERC20": [
        1148
      ],
      "Elon": [
        67
      ],
      "IERC20": [
        1226
      ]
    },
    "id": 68,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 35,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "44:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 36,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 1149,
        "src": "71:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1148,
              "src": "147:5:1"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "147:5:1"
          }
        ],
        "contractDependencies": [
          1148,
          1226,
          1249
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 67,
        "linearizedBaseContracts": [
          67,
          1148,
          1226,
          1249
        ],
        "name": "Elon",
        "nameLocation": "139:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "195:63:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "220:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Elon_$67",
                              "typeString": "contract Elon"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Elon_$67",
                              "typeString": "contract Elon"
                            }
                          ],
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "212:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "212:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "212:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030303030",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "227:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 45,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "206:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "206:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "206:44:1"
                }
              ]
            },
            "id": 54,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456c6f6e",
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "180:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_88e36abb34aacfea640de33e89bd48b8a905a1b831f7790a5ae752003f218753",
                      "typeString": "literal_string \"Elon\""
                    },
                    "value": "Elon"
                  },
                  {
                    "hexValue": "454c4e",
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "188:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_121be8422d01838eb3d61a02383f5428d816116124cd6edb4688a66c62198fea",
                      "typeString": "literal_string \"ELN\""
                    },
                    "value": "ELN"
                  }
                ],
                "id": 43,
                "modifierName": {
                  "id": 40,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1148,
                  "src": "174:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "174:20:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "171:2:1"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:1"
            },
            "scope": 67,
            "src": "159:99:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "294:64:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "319:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "319:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "330:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 57,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "305:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Elon_$67",
                          "typeString": "contract Elon"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "305:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "305:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "305:45:1"
                }
              ]
            },
            "functionSelector": "de5f72fd",
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nameLocation": "279:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:1"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:0:1"
            },
            "scope": 67,
            "src": "270:88:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 68,
        "src": "130:231:1"
      }
    ],
    "src": "44:317:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Blackie/DeFi-Application/src/Contracts/Elon.sol",
    "exportedSymbols": {
      "Context": [
        1249
      ],
      "ERC20": [
        1148
      ],
      "Elon": [
        67
      ],
      "IERC20": [
        1226
      ]
    },
    "id": 68,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 35,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "44:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 36,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 68,
        "sourceUnit": 1149,
        "src": "71:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1148,
              "src": "147:5:1"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "147:5:1"
          }
        ],
        "contractDependencies": [
          1148,
          1226,
          1249
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 67,
        "linearizedBaseContracts": [
          67,
          1148,
          1226,
          1249
        ],
        "name": "Elon",
        "nameLocation": "139:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "195:63:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "220:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Elon_$67",
                              "typeString": "contract Elon"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Elon_$67",
                              "typeString": "contract Elon"
                            }
                          ],
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "212:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "212:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "212:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030303030",
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "227:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 45,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "206:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "206:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "206:44:1"
                }
              ]
            },
            "id": 54,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "456c6f6e",
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "180:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_88e36abb34aacfea640de33e89bd48b8a905a1b831f7790a5ae752003f218753",
                      "typeString": "literal_string \"Elon\""
                    },
                    "value": "Elon"
                  },
                  {
                    "hexValue": "454c4e",
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "188:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_121be8422d01838eb3d61a02383f5428d816116124cd6edb4688a66c62198fea",
                      "typeString": "literal_string \"ELN\""
                    },
                    "value": "ELN"
                  }
                ],
                "id": 43,
                "modifierName": {
                  "id": 40,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1148,
                  "src": "174:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "174:20:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "171:2:1"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:1"
            },
            "scope": 67,
            "src": "159:99:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 65,
              "nodeType": "Block",
              "src": "294:64:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "319:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "319:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "330:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 57,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "305:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Elon_$67",
                          "typeString": "contract Elon"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 761,
                      "src": "305:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "305:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "305:45:1"
                }
              ]
            },
            "functionSelector": "de5f72fd",
            "id": 66,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nameLocation": "279:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:2:1"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:0:1"
            },
            "scope": 67,
            "src": "270:88:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 68,
        "src": "130:231:1"
      }
    ],
    "src": "44:317:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xa396aDD4C60aF488e8d91fC46B14D71c0A7624Ec",
      "transactionHash": "0x51e8e9acb8d43eb0ea77ebae2ae4ac5ce68b00b00f87ee1d397f801f74214790"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-30T09:15:34.680Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}